{
  "active": false,
  "connections": {
    "Ollama Model": {
      "ai_languageModel": [
        [
          {
            "node": "create_post_ai",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "check_rules_llm",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "create_post_ai": {
      "main": [
        [
          {
            "node": "parse_llm_output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_rules_llm": {
      "main": [
        [
          {
            "node": "parse_llm_check_output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "switch_check_rules_llm": {
      "main": [
        [
          {
            "node": "set_output",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "set_error_max_tries",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "create_post_ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "parse_llm_check_output": {
      "main": [
        [
          {
            "node": "switch_check_rules_llm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "parse_llm_output": {
      "main": [
        [
          {
            "node": "check_rules_llm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "init_workflow": {
      "main": [
        [
          {
            "node": "set_workflow_vars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_workflow_vars": {
      "main": [
        [
          {
            "node": "create_post_ai",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-21T14:27:03.290Z",
  "fileName": "linkedpostcreator.json",
  "id": "PaeHFdCsdoVbQx11",
  "isArchived": false,
  "meta": null,
  "name": "LinkedPostCreator",
  "nodes": [
    {
      "parameters": {
        "model": "gemma3:4b-it-qat",
        "options": {
          "keepAlive": "5m"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        1204,
        280
      ],
      "id": "850812ae-d8e7-4f38-8890-0cf3687d3362",
      "name": "Ollama Model",
      "credentials": {
        "ollamaApi": {
          "id": "w7dU7nKm7FYuEJdd",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a writing assistant for creating LinkedIn posts.\n\n{{ $('set_workflow_vars').item.json.RULES }}\n\nExtra Rules:\n\n{{ $('init_workflow').item.json.EXTRA_RULES }}\n\nExample Input:\n\n<content>\nWhile the world is obsessed with big data, some researchers and companies are making huge strides by focusing on small data‚Äîmore curated, higher quality datasets. These lean datasets are improving training efficiency and model explainability. This shift is especially important for businesses that can't afford massive infrastructure but still want to leverage AI responsibly.\n</content>\n\nExample Output:\n\nBig data gets all the attention‚Äîbut what if small, well-crafted datasets could drive smarter, faster AI innovation?\n\nHere's what stood out to me:\n\nüîç Small, curated datasets improve model accuracy and explainability\n‚ö° They're faster and more efficient to train on‚Äîno need for massive compute\nüí° Ideal for organizations with limited resources that still want real AI impact\n\nDo you think we're overvaluing data quantity at the expense of quality?\n\nüëâ Read the full post: SOME_LINK\n\n#AIethics #SmallData #DataScience\n\n\nInput:\n\n<content>\n{{ $('init_workflow').item.json.CONTENT }}\n</content>",
        "messages": {
          "messageValues": [
            {
              "message": "=You are an expert social media and LinkedIn content writer.\n\nYou will be provided with:\n- The content of an external post\n- Specific instructions from the user"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        520,
        185
      ],
      "id": "53b6e790-4391-4a4f-81c4-6438332f3ba1",
      "name": "create_post_ai",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a strict validator for LinkedIn post formatting. Review the provided text and return:\n\n<output>true</output>  \n‚Äî if ALL the following conditions are met.\n\n<output>false</output>  \n‚Äî if ANY rule is violated.\n\nValidation Criteria:\n\n{{ $('set_workflow_vars').item.json.RULES }}\n\nExtra Validation:\n\n{{ $('init_workflow').item.json.EXTRA_RULES }}\n\n- Do not return any explanation. Return only <output>true</output> or <output>false</output> based on the evaluation.\n\nValidate input:\n\n<url>{{ $('init_workflow').item.json.URL }}</url>\n<text_2_validate>\n{{ $json.text }}\n</text_2_validate>"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1116,
        60
      ],
      "id": "3ccf8e77-c8f2-46c2-ad0d-23f39f480398",
      "name": "check_rules_llm"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ef976d0c-a5e3-4a2f-8740-82b3edbdb3ce"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1f7bef35-3f55-4abe-87a7-c30b8961ae2e",
                    "leftValue": "={{ $runIndex }}",
                    "rightValue": "={{ $('set_workflow_vars').item.json.MAX_TRIES }}",
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1712,
        185
      ],
      "id": "9ce5d8f1-1f42-424e-ba06-095121d20a0f",
      "name": "switch_check_rules_llm"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a77a0ee-e904-467b-9f9f-e04aa3ddf203",
              "name": "ERROR",
              "value": "MAX_RETRIES_EXCEEDED",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1932,
        285
      ],
      "id": "db12fcdb-214d-4990-9f55-4f16016b41af",
      "name": "set_error_max_tries"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f8f3783-1e58-470f-8731-866fff1519a3",
              "name": "text",
              "value": "={{ /.*<output>(([\\s\\S]+)*)<\\/output>.*/.exec($json.text)?.[1].trim() || 111 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1492,
        60
      ],
      "id": "b10fc0f3-d9ea-402a-9645-41506f8a95c7",
      "name": "parse_llm_check_output"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f8f3783-1e58-470f-8731-866fff1519a3",
              "name": "text",
              "value": "={{ /.*<output>(([\\s\\S]+)*)<\\/output>.*/.exec($json.text)?.[1].trim().replace(\"SOME_URL\", $('set_workflow_vars').item.json.URL) || $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        896,
        60
      ],
      "id": "cf3e92f0-e28a-48e5-ac36-5358d86946da",
      "name": "parse_llm_output"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "EXTRA_RULES"
            },
            {
              "name": "CONTENT"
            },
            {
              "name": "URL"
            },
            {
              "name": "MAX_WORDS",
              "type": "number"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        80,
        185
      ],
      "id": "e8f79d38-f386-4476-b357-403edda33687",
      "name": "init_workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3278d703-6413-4117-95ef-f5e639096d2b",
              "name": "RULES",
              "value": "=Strict Structure format:\n1. Hook: One sentence. No more than 20 words. Must be engaging and relevant.\n2. Summary: 2-5 bullet points. Each bullet must be one sentence, max 25 words.\n3. Reflection: End with a one-sentence question that invites engagement.\n4. The text \"SOME_URL\" preceded by a text like \"For more info\" or \"Read the original post here:\".\n5. CTA + Hashtags: One sentence with the original link and up to 3 hashtags. Hashtags must be on a new line.\n\nRules:\n- Never change the structure with the marked order.\n- No use more that 5 bullet points.\n- Output ONLY the final LinkedIn post content inside a \"<output></output>\".\n- Keep the tone positive, inclusive, and professional.\n- Do not summarize everything‚Äîfocus on key insights or reflections only.\n- Total output: Maximum {{ $('init_workflow').item.json.MAX_WORDS }} words.\n- Never use markdown, bold, italics, or headings. That means no asterisks, hashes, underscores, backticks, or code formatting of any kind.\n- Never write in first person.\n- Emojis: Optional, but no more than 4.\n- Use 2 line breaks between every sections.",
              "type": "string"
            },
            {
              "id": "97804ec0-c646-438a-bbc8-fad3b1081264",
              "name": "MAX_TRIES",
              "value": 3,
              "type": "number"
            },
            {
              "id": "b072d171-1af0-407c-8b16-ee61278bbd52",
              "name": "ERROR",
              "value": "",
              "type": "string"
            },
            {
              "id": "b090338e-13b0-4b58-b768-6a826051edf8",
              "name": "POST_TYPE",
              "value": "={{ $json.POST_TYPE || \"LinkedIn Post\" }}",
              "type": "string"
            },
            {
              "id": "8b1c6021-99ec-4daa-9f4a-f5d583ac2daf",
              "name": "URL",
              "value": "={{ $json.URL || \"https://datahub-local.alvsanand.com/\" }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        300,
        180
      ],
      "id": "44e6348d-ad4f-474e-b40a-b265133b141e",
      "name": "set_workflow_vars"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2b0bc19a-ed15-45a0-9022-a59e2c9e56d1",
              "name": "text",
              "value": "={{ $('parse_llm_output').item.json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1932,
        85
      ],
      "id": "74d054b4-1f82-4953-8af9-976953cf1bea",
      "name": "set_output"
    }
  ],
  "pinData": {},
  "repo_name": "datahub-local-workflows",
  "repo_owner": "datahub-local",
  "repo_path": "n8n",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-22T08:07:37.368Z",
  "versionId": "88ab996e-91e4-4c2e-b529-c8de81ad4e8a"
}