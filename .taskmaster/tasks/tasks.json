{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "Create Airflow project skeleton",
        "description": "Create skeletons for Airflow in 'workflows/airflow' folder.",
        "status": "done",
        "priority": "high",
        "dependencies": []
      },
      {
        "id": 2,
        "title": "Create dbt project skeleton",
        "description": "Initialize a containerized dbt project with profiles, a models folder for `silver` and `marts` in 'workflows/dbt' folder, add tests camapabilities. Use 'uv' for managing dependencies",
        "status": "pending",
        "priority": "high",
        "dependencies": []
      },
      {
        "id": 3,
        "title": "Create DLT project skeleton",
        "description": "Initialize a containerized DLT projectin 'workflows/dlt' folder, add tests camapabilities. Use 'uv' for managing dependencies",
        "status": "pending",
        "priority": "high",
        "dependencies": []
      },
      {
        "id": 4,
        "title": "Setup: create DLT and dbt images",
        "description": "Create GitHub Actions (or CI) workflow to build container images for DLT and dbt folders, and push to Github registry; include test steps.",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "2",
          "3"
        ]
      },
      {
        "id": 5,
        "title": "Set up local MinIO and Postgres,",
        "description": "Provision local MinIO and Postgres using docker-compose. Minio should contain 4 buckets for raw, bronze, silver, and marts data.",
        "status": "pending",
        "priority": "high",
        "dependencies": []
      },
      {
        "id": 6,
        "title": "Create example ingestion: raw -> bronze table",
        "description": "Implement a simple ingestion DLT pipeline that reads sample json file from the bucket API and writes to `bronze.test_raw` Iceberg table on MinIO.",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "1",
          "2",
          "3",
          "4",
          "5"
        ]
      },
      {
        "id": 7,
        "title": "Implement example silver model: bronze table -> silver table",
        "description": "Add dbt SQL models to transform `bronze.test_raw` into `silver.test_silver` with dedup logic and tests.",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "6"
        ]
      },
      {
        "id": 8,
        "title": "Implement example gold mart: silver table -> marts table",
        "description": "Add dbt models that aggregate `silver.test_silver` into `marts.test_marts` for reporting.",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "7"
        ]
      },
      {
        "id": 9,
        "title": "Create example Airflow DAG for ingestion example pipeline",
        "description": "Create KubernetesPodOperator-based DAGs that run DLT pipelin and dbt job with clear dependencies, retries, and monitoring hooks.",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "8"
        ]
      },
      {
        "id": 10,
        "title": "Example Superset dashboard: test_mart analysis",
        "description": "Build a dashboard for test_mart analysis.",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "9"
        ]
      }
    ],
    "metadata": {
      "created": "2025-09-14T14:01:56.211Z",
      "updated": "2025-09-14T17:08:41.592Z",
      "description": "Tasks for master context"
    }
  }
}